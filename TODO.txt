SOFTWARE DESIGN:
    Configuration, setting, experiments, arg
        This is the current vision for the design of settings, config, ...
        - the configuration file should contain all information that is the same for a set of experiments
        (e.g. budget, result_directory, parameters for each architecture, parameters for the localsearch algorithm)
        - the experiment file should contain all information that changes for a set of experiments
        (e.g. budget, actual architecture, actual optimization algorithm, scenario file)
        - note that sometimes the distinction can be blurry (e.g. budget or parameters for an algorithm); the rule of
        thumb should be the following: if it changes between experiments, it goes to experiment.json, otherwise config.json
        - when the program is executed, the parameters are read from config.json first and then experiment.json (overwriting
        evenutal config values)
        - after that single values can be overwritten one more time from the command line (BUT this should be only seen
        as a last resort)
        - all of this together form the settings that are provided in settings.py
        - after loading the settings, they are saved into the execution directory (and can thus be loaded to rerun a
        single experiment)
        - the settings.py file will provide dictionaries (corresponding to the categories of .ini files) with entries
        that correspond to their respective values
        To achieve this, the following tasks need to be done
        1) Convert config to .json
        2) Refactor settings.py to use dictionaries
        3) Save complete configuration to execution directory (rather than just copyin the .ini file)


KNOWN ISSUES:
    Can't execute argos3 from IDE
        Environment variables for argos3 are not set when the program is executed from PyCharm (or any other IDE probably too)
        Solution: create setup files that either the right settings for each IDE or that contain instructions for that IDE

    mpi4py creates a memory issue on the cluster (majorana)
        I'm currently investigating this issue